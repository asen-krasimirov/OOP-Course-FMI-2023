SSO (Short String Optimization) е начин за запазване на малки стрингове като не е нужно да се заделя динамична памет за тях.
Това се постига като достатъчно малки стрингове се запазват в паметта на пойнтъра, който сочи към хийпа.

Текущата имплементация на SSO съдържа:

union {
    char *_large;
    char _small[sizeof(_large)]{};
} _data;

static const size_t _small_capacity = sizeof(_data._large);
size_t _length = 0;

Като _data е union, в който се съдържа пойнтърът, сочещ към хийпа, и малкия масив, с капацитет паметта, заемана от пойнтъра.
Отделно от това се съхранява и _length, което е дължината на стринга.
И _small_capacity, което се пази като статична член- даннa, за да не се изчислява при всяка проверка, дали стринга е голям, или малък.

Самата проверка дали стрингът е голям е във функцията isLarge(), която прави просто сравнение на _length и _small_capacity.
Тази фyнкция се извиква винаги, когато определяме дали ни е нужна динамична памет.

Оптимизацията ще се приложи за стрингове с дължина до sizeof(sizeof(_large)) (размера на пойнтъра).